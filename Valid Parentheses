class Solution {
public:
    bool isValid(string s) {
        //use a stack to check the same
        //push onto stack if its an opening breacket
        //if its a closing bracket,check if the top of the stack is its corresponding open bracket, if so, pop it, otherwise return false
        stack<char> S;
        int length = s.size();
        for(int i=0; i<length; i++)
        {
            if(s[i] == '(' || s[i] == '{' || s[i] == '[')
            {
                S.push(s[i]);
            }
            else if(s[i] == ')' && !S.empty() && S.top() == '(')
                S.pop();
            else if(s[i] == '}' && !S.empty() && S.top() == '{')
                S.pop();
            else if(s[i] == ']' && !S.empty() && S.top() == '[')
                S.pop();
            else
                return false;
        }
        if(S.empty())
            return true;
        else
            return false;
        
    }
};
