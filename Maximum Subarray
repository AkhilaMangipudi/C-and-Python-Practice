class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        //Dynamic programming is used to solve this problem
        //we have two variables here; max_so_far and max_ending here. max_ending_here += nums[i] and if max_ending_here < 0 then set max_ending_here to zero. and if max_so_far is less than max_ending_here, then set max_so_far = max_ending_here.
        int max_so_far =nums[0], max_ending_here = nums[0];
        size_t length =  nums.size();
        for(int i=1; i<length; i++)
        {
            max_ending_here = max(nums[i],max_ending_here+nums[i]);
            max_so_far = max(max_so_far,max_ending_here);
            
        }
        return max_so_far;
        
    }
};
